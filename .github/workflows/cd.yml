name: Continuous Deployment

on:
  push:
    branches:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: notification-service
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to Amazon ECS
      run: |
        aws ecs update-service --cluster notification-cluster --service notification-service --force-new-deployment

    - name: Check ECS service stability and rollback if necessary
      run: |
        echo "Waiting for service to stabilize..."
        if ! aws ecs wait services-stable --cluster notification-cluster --services notification-service --max-attempts 10; then
          echo "Service failed to stabilize. Rolling back to previous task definition."
          TASK_DEFINITION=$(aws ecs describe-services --cluster notification-cluster --services notification-service --query 'services[0].taskDefinition' --output text)
          PREVIOUS_REVISION=$(($(echo $TASK_DEFINITION | awk -F: '{print $NF}') - 1))
          PREVIOUS_TASK_DEFINITION="${TASK_DEFINITION%:*}:$PREVIOUS_REVISION"
          aws ecs update-service --cluster notification-cluster --service notification-service --task-definition $PREVIOUS_TASK_DEFINITION --force-new-deployment
          echo "Rollback initiated. New deployment started with previous task definition."
          exit 1
        else
          echo "Service has stabilized successfully."
        fi
